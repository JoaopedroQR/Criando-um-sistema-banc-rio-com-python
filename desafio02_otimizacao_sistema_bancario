import os

def menu():
    return """
    ============ MENU ============
    [d] Depositar
    [s] Sacar
    [e] Extrato
    [nc] Nova conta
    [lc] listar contas
    [nu] Novo usuário
    [q] Sair
    => """

def depositar(extrato, saldo, numero_do_deposito, deposito, /):
    if deposito >= 0:
        extrato += f'deposito: {str(numero_do_deposito)} ---> R${deposito:.2f}\n'
        numero_do_deposito += 1
        saldo += deposito
        os.system('cls')
        print("Depositado.")

    else:
        os.system('cls')
        print("Valores negativos não podem ser depositados.")

    return extrato, saldo, numero_do_deposito

def sacar(*, extrato, LIMITE_SAQUES, limite, saldo, saques_diarios):
    if saques_diarios < LIMITE_SAQUES:
        saque = float(input("Digite a quantidade que você quer sacar: "))

        if saque < 0:
            os.system('cls')
            print("Operação falhou! Valor informado é inválido.")

        elif saque <= limite and saldo >= saque:
            saldo -= saque
            saques_diarios += 1
            extrato += f'Saque: {saques_diarios} ---> R${saque:.2f}\n'
            os.system('cls')
            print("Sacado.")

        elif(saque > saldo):
            os.system('cls')
            print("Não é possível realizar o saque por falta de saldo.")

        else:
            os.system('cls')
            print("Não foi possível realizar o saque por conta do seu limite(R$500.00).")

    else:
        os.system('cls')
        print("Você já ultrapassou o limite de saques")
    
    return extrato, LIMITE_SAQUES, limite, saldo, saques_diarios

def exibir_extrato(saldo, saques_diarios, /, *, extrato):
    os.system('cls')
    print("-"*15 + 'EXTRATO' + "-"*15)
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f'Saldo da conta: {saldo:.2f}')
    print(f'Quantidade de Saques do dia: {saques_diarios}')
    print("-"*37)

def criar_usuario(usuarios):
    os.system('cls')
    cpf = input("Digite seu CPF (Apenas números): ")
    usuario = filtrar_usuarios(cpf, usuarios)

    if usuario:
        print("\nJá existe usuário com esse nome!!!")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("Usuário criado com sucesso!!!")

def filtrar_usuarios(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(AGENCIA, numero_da_conta, usuarios):
    os.system('cls')
    cpf = input("Digite o CPF do usuário: ")
    usuario = filtrar_usuarios(cpf, usuarios)

    if usuario:
        print("Conta criada com sucesso!!!")
        return {"agencia": AGENCIA, "numero_da_conta":numero_da_conta, "usuario": usuario}
    
    print("Usuário não encontrado.")

def listar_contas(contas):
    os.system('cls')

    print("Não foram criadas contas." if not contas else "")

    for conta in contas:
        print('Agencia: ',conta["agencia"])
        print('Numero da conta: ',conta["numero_da_conta"])
        print("Titular: ",conta["usuario"]['nome'])

    print("=" * 100)
    
def main():
    saques_diarios = 0 # maximo 3
    LIMITE_SAQUES = 3
    AGENCIA = '0001'
    saldo = 0
    limite = 500
    extrato = ''
    numero_do_deposito = 1
    usuarios = []
    contas = []

    while True:

        opcao = input(menu())

        if opcao == 'd':
            deposito = float(input("Digite o valor a ser depositado: "))

            extrato, saldo, numero_do_deposito = depositar(extrato, saldo, numero_do_deposito, deposito)

        elif opcao == 's':

            extrato, LIMITE_SAQUES, limite, saldo, saques_diarios = sacar(
                extrato=extrato,
                LIMITE_SAQUES=LIMITE_SAQUES,
                limite=limite, 
                saldo=saldo, 
                saques_diarios=saques_diarios
            )

        elif opcao == 'e':
            exibir_extrato(saldo, saques_diarios, extrato=extrato)

        elif opcao == 'nc':
            numero_da_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_da_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == 'lc':
            listar_contas(contas)
        
        elif opcao == 'nu':
            criar_usuario(usuarios)

        elif opcao == 'q':
            break

        else:
            os.system('cls')
            print("Operação inválida, porfavor selecione novamente a operação desejada.")

main()
